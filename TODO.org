* TODO База данных 
  CLOCK: [2010-09-04 Сбт 23:56]--[2010-09-04 Сбт 23:58] =>  0:02
  +синтаксис поиска в полнотекстовом поиске - для того, чтобы
  расширить функциональность программы и не отмечать тысячи галочек
  + (хитин:a) | (chitosan:b & molecule:c)

** TODO В первую очередь!!!

*** TODO Ввод данных
    не решены вопросы с легким, (как пишут - интуитивным) введением данных в БД
    и соответственно с получением оттуда в нужном виде и формате, отсортированными
    по усмотрению пользователя (например только даты или только фамилии, или названия
    и авторов.). 

*** TODO Кодировка при импорте/экспорте
    -Как вы помните рассыпаются шрифты в гречку, не распознаются основные рабочие программы, 
    такие как Икселл и Ворд

    - Посмотреть, где что рассыпается
    

*** TODO BibTeX
    Нужна возможность вводить и выводить информацию в интернациональном 
    библиографическом формате, для взаимодействия с другими библиографиями, 
    хотя, честно скажу, я эту возможность в ТЗ не озвучивал.

    -добавлено поле выбора формата tex в диалоге экспорта данных.

*** DONE Работа со ссылками
    Нет удобной работы со ссылками, как в эндноуте - выделить перенести, 
    скопировать, удалить при помощи командного меню, мыши и стрелочек, а это было в ТЗ. 
    Что-то написано, но работает с перекосами и не моментально, как в эндноуте, 
    где можно выделить любой столбец, строку или столбцы –в любом сочетании.

    self.copy_text (:L2713)

*** TODO Работа с несколькими библиотеками
    Нет возможностей создавать, копировать, сливать, выделять из созданной, 
    и удалять новые независимые библиотеки. Например, одна библиотека по хитину, 
    а другая по морским млекопитающим. И открывать любую из них - по желанию.

    ---

*** TODO Дубли
    Остались проблемы с дублями - во первых с корректировкой и унифицированием 
    авторов, журналов и ключевых слов, а во вторых, так и не появилась возможность 
    находить одинаковые публикации по 2-3 полям и не сделан вариант легко сравнивать их, 
    например, поочередно выводя на экран две хорошо просматриваемые одновременно карточки с 
    полными записями для каждой пары (ну, или тройки) и кнопками на 
    каждой - "удалить данный вариант публикации".

    finddupl.py - шаблон того, как оно должно работать. 

    в bibl.py - MainView - duplSettings - настройки поиска дублей, вызывает
    duplDelete.

    duplDelete - работает как finddupl, берет список для поиска из 
    duplSettings и находит дубли, останавливаясь для подтверждения
    пользователя каждый раз при нахождении дубликата. 
    Должно уметь undo/redo, пропустить, удалить. 

    переписать duplSelect, setUnprocessed, setProcessed, setMainEntry, 
    deleteDuplicate, renameDuplicates, delRow, addBranch, addRow, ch_view_dupl.

    Добавить в duplDelete добавление новых строк для найденных дублей, изменение
    кол-ва обработанных записей итд. 


*** TODO Списки ключевых слов, авторов и пр. 
    Не работает автоматическая система создания списков ключевых слов,
    авторов, журналов, с возможностью просмотра и редактирования этого списка, 
    а главное - с возможностью вытаскивания списка публикаций по этим данным. 
    Например - ключевое слово "apoptos" в список ключевых слов. Клик по нему должен 
    вызывать список всех статей, которые содержат "apoptos" как ключевое слово. 
    Или фамилия Kim. Или журнал "биоматериалы". Эта возможность тоже упоминалась в ТЗ.

    - Создать уже эти списки.

*** DONE Лишние кнопки
    Внешний вид не очищен - не убраны лишние кнопки и команды, но это пустяки.

*** TODO После удаления
    обновлять индекс! иначе получается
      File "./bibl.py", line 2801, in data
      value = self.get_value(index)
      File "./bibl.py", line 2794, in get_value
      return self.dbdata[i][j].decode("utf-8")
      IndexError: list index out of range


*** TODO Обязательные поля
    в форме добавления данных оставить как есть, а необязательные - 
    сделать сереньким, чтобы шрифт становился черным только при наведении курсора.

*** DONE [#A] Добавить поле "Дата добавления публикации"
    Узнать, что делать для уже введенных данных.
    ->В финальной версии проставить дату
    Для новых данных вставлять текущую дату.
    Добавить соотв. поле в форму добавления данных,
    в сложный поиск и в полный вид.
    В форму добавлено. Теперь добавить изменение соотв. поля при добавлении или редактировании.
    Метки проставлены в bibl.py
    
    Мне кажется что не надо давать пользователю возможность самому проставлять дату. 
    Более того, мне кажется, что это должен делать не питон, а постгрес. 
    там можно сделать триггер - on insert, on update. Или же можно делать это в модели таблицы. 
    on insert - добавляет today в articles.date_add и articles.date_mod, on update - ставит today
    в articles.date_mod
    
    ага, ф-я написана, но почему-то не работает...
    >>> Работает!

*** TODO [#C] Кнопка для показа вертикальных заголовков
    tableview.verticalHeader.setVisible(True)

*** DONE Удаление строки
    При переходе к полному виду не удаляются записи...
    Ошибка в L3672... СТРОКА 1:select * from articles where uid = Prikl Biokhim Mikrobiol
    неправильно вычисляется индеск uid. А это происходит потому что при изменении вида не обновляется
    BiblTableModel.columns

*** TODO [#C] -Посмотреть как работает импорт
    заголовки исчезают при изменении параметра "со строки" и разделителя.
    а м.б. так и надо?...

    И сделать Thread...

*** TODO [#A] -Инсталятор
    Тут py2exe или python distutils.
    + не забыть про инициализацию БД и про
      проблему первой записи...

    #Вот так прячутся все эти ужасные файлы
      setup( windows=[{"script": "main.py"}],
      options={"py2exe":{"includes":["sip"], "bundle_files":1}},
      data_files=matplotlib.get_py2exe_datafiles(),
      zipfile = None,
      )
  


** DONE Подключение к базе
   Надо сделать так, чтобы настройки подключения не надо было бы писать в два файла одновременно
   а чтобы они были бы в одном, а в другой только импортировались.

** TODO [#C] Модель/Вид базы
   переделать, чтобы не выполнять каждый раз запрос и не вытягивать
   ВСЕ из базы при смене вида, а всего лишь скрывать или показывать
   те или иные ячейки.

** TODO Ошибки

** TODO [#C] Ограничение ввода в поля - QValidator
   lineEdit.setValidator(QtGui.QValidator). Там есть и для целых, и для
   дробных, и регулярные выражения.

** TODO База работает некорректно при заполнении базы с нуля.
   Кажется эта проблема так и останется нерешенной
   Пока решено начинать не с 1, а с 2. Тогда все работает. Иначе глючед...
   Что с этим делать, абсолютно не ясно...


** TODO Добавление PDF
*** TODO [#B] Безопасное удаление файла с публикацией
    Не удалять, а перемещать в корзину, положение корзины -
    специфично для каждой ОС - т.е. это надо переопределять
    Linux - в зависимости от граф. оболочки, ~/.local/share/Trash
    Win - C:\RECYCLED (ХР) или возможны варианты... (Vista/7) - чорт сломит ногу
    в попытках понять, как оно работает!

    Идея - не удалять в корзину, а перемещать в какую-нибудь папку,
    если отмена - восстанавливать, при выходе из программы если папка не пустая, спрашивать
    подтверждение на удаление.

    Добавили trash, туда и класть. Или в /tmp

** TODO [#B] Настраиваемый вид
    :CLOCK:...
    Сделать настраиваемый вид таблицы, чтобы можно было выбирать для отображения
    произвольные столбцы таблицы

*** TODO [#B] Заголовки таблиц в зависимости от вида
    CLOCK: [2010-09-05 Вск 16:26]
    Для настраиваемого вида

** TODO Импорт и экспорт данных
   В таблицы CSV - это делается просто -
   postgres copy to / copy from (select ... from ...)

** TODO При импорте вставлять PDF
     если среди импортируемых файлов есть пути до них.

** TODO [#C] Поиск дублей
   :CLOCK:...
   Алгоритм б.м. готов, надо теперь все это воплотить в жизнь...
   Для того, чтобы нормально работал TreeModel, необходима PyQT4 не младше 4.6
   И да, сделать многоколоночный TreeView, т.к. планируется искать дубли
   минимум по названию и источнику

   Помнить про многоколоночное древо!!!!!!!!!!!!!!!!!1

   RenameDupl: заменить articles на ту таблицу дублей,
   с которой сейчас работают

   SetMain: добавить изменение данных в базе

   И доделать DuplThread, чтобы корректно обрабатывались значения, в случае отсутствия
   результатов, а не зависала бы форма.

*** TODO [#B] Поиск клавишами для Linux
    а то обидно! делается с помощью python xlib

** TODO Установочный скрипт
   Тут или python freeze, или py2exe или PyInstaller
   +NulllsoftInstaller

   компилируем, чтобы не было необходимости устанавливать все эти
   дополнительные библиотеки и интерпретатор, заворачиваем в
   NullSoftInstaller и готово.

